name: Build and Release

#on:
#  push:
#    tags:
#      - 'v*'

on:
  push:
    branches:
      - 'dev'


jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.21.6]  # Add more versions if needed
        #os: [windows, linux, darwin, freebsd, openbsd, netbsd, dragonfly]
        os: [windows, linux, darwin]
        arch: [amd64, arm64, 386, arm]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
        # Set other Go-related options as needed

    - name: Build binary
      run: go build -o nTask-${{ matrix.os }}-${{ matrix.arch }}${{ runner.os == 'Windows' && matrix.os == 'windows' && matrix.arch == 'amd64' && '.exe' || '' }}
      # Add any additional build steps or commands

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Create Release Draft
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        body: |
          Release notes for version ${{ github.ref }}

    - name: Upload Release Assets
      if: startsWith(github.ref, 'refs/tags/v')
      id: upload-release-assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: |
          nTask-windows-amd64.exe
          nTask-windows-386.exe
          nTask-linux-amd64
          nTask-linux-arm64
          nTask-linux-386
          nTask-darwin-amd64
          nTask-darwin-arm64
        asset_name: nTask-${{ matrix.os }}-${{ matrix.arch }}
